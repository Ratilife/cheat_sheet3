import json
import os
from PySide6.QtWidgets import QFileDialog
from srs.parsers.file_parser_service import FileParserService
class FileManager:
    def __init__(self, parser_service: FileParserService):
        # TODO üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: 02.07.2025
        self.tree_model = None
        self.parser_service = parser_service



    @staticmethod
    def get_save_path(title: str, filter: str) -> str | None:
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 02.07.2025
        # filter = "–°–æ–∑–¥–∞—Ç—å ST —Ñ–∞–π–ª", "", "ST Files (*.st)"
        path, _ = QFileDialog.getSaveFileName(None, title, "", filter)
        return path

    @staticmethod
    def create_md_file(path: str) -> bool:
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π MD-—Ñ–∞–π–ª —Å –±–∞–∑–æ–≤—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 02.07.2025
        try:
            with open(path, 'w', encoding='utf-8') as f:
                f.write(f"# {os.path.basename(path).replace('.md', '')}\n\n")
            return True
        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è MD-—Ñ–∞–π–ª–∞: {str(e)}")

    @staticmethod
    def create_st_file(path: str) -> bool:
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π ST-—Ñ–∞–π–ª —Å –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 02.07.2025
        try:
            with open(path, 'w', encoding='utf-8') as f:
                name = os.path.basename(path).replace('.st', '')
                f.write(f"""{{1, {{"{name}", 1, 0, "", ""}}, []}}""")
            return True
        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ST-—Ñ–∞–π–ª–∞: {str(e)}")

    def _get_save_path_json(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 02.07.2025
        return os.path.join(os.path.dirname(__file__), "saved_files.json")
    def save_files_to_json(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ JSON"""
        # ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ: 02.07.2025
        save_path = self._get_save_path()
        files = []

        # –°–æ–±–∏—Ä–∞–µ–º –ø—É—Ç–∏ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–∫–∞–∫ st, —Ç–∞–∫ –∏ md)
        for i in range(len(self.tree_model.root_item.child_items)):
            item = self.tree_model.root_item.child_items[i]
            if item.item_data[1] in ["file", "markdown"]:  # –ò–∑–º–µ–Ω–µ–Ω–æ —É—Å–ª–æ–≤–∏–µ
                files.append({
                    "path": item.item_data[2],
                    "type": item.item_data[1]  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
                })

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON
        with open(save_path, 'w', encoding='utf-8') as f:
            json.dump(files, f, ensure_ascii=False, indent=4)


